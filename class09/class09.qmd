---
title: "Class 09: Structural Bioinformatics 1"
author: "Olivia Chu"
format: gfm
---

# What is in the PDB anyways?

The main database of biomolecular structures is called the PDB and is available at www.rcsb.org. 

Let's begin by seeing what is in this database:

```{r}
pdbstats <- read.csv("PDB.csv", row.names = 1)
head(pdbstats)
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
# Remove the commas
n.xray <- sum( as.numeric( gsub(",", "", pdbstats$X.ray) ) )

n.em <- sum( as.numeric( gsub(",", "", pdbstats$EM) ) )

n.total <- sum( as.numeric( gsub(",", "", pdbstats$Total) ) )

# Round to 2 significant figures
p.xray <- (n.xray/n.total) * 100
p.em <-  (n.em/n.total) * 100

round(p.xray, 2)
round(p.em, 2)
```

85.9% of the structures in the PDB are solved by X-ray.

7.02% of the structures in the PDB are solved by Electron Microscopy.

> Q2: What proportion of structures in the PDB are protein?

```{r}
as.numeric( gsub(",", "", pdbstats$Total[1]) )/ n.total * 100
```

86.9% of structures in the PDB are protein.

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

It is not straightforward to find all HIV-1 protease structures using plain text searching on the database.

# Visualizing HIV-1

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We only see one atom per water (the red oxygen) because of the resolution. Our resolution of 2 Angstrom is not sufficient to view the hydrogen atoms.

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?

Yes, I can identify this water molecule.

!["Conserved" Water Molecule](1HSG water.png)

The water molecule is HOH 308 (residue number 308).

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![Catalytic Residues ASP 25 (wide)](1HSG.png)

![Catalytic Residues ASP 25 (zoom)](1HSG zoom.png)

## Working with structure data in R

We will use the `bio3d` package for this:

```{r}
library(bio3d)
```

Read a PDB file from the online database.

```{r}
pdb <- read.pdb("1hsg")
pdb
```

```{r}
head(pdb$atom)
```

What is the first residue 3 letter code and 1 letter code?

```{r}
pdb$atom$resid[1]
aa321( pdb$atom$resid[1] )
```

> Q7: How many amino acid residues are there in this pdb object? 

There are 198 amino acids residues in this pdb object.

> Q8: Name one of the two non-protein residues? 

One of the two non-protein residues is HOH.

> Q9: How many protein chains are in this structure?

There are 2 protein chains in this structure.

## Predicting functional motions of a single structure

Let’s read a new PDB structure of Adenylate Kinase (PDB code: 6s36) and perform Normal mode analysis.

```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes).

```{r}
m <- nma(adk)
```

```{r}
plot(m)
```

To view a “movie” of these predicted motions we can generate a molecular “trajectory” with the mktrj() function.

```{r}
mktrj(m, file="adk_m7.pdb")
```

# Section 4, Comparative Structure Analysis

Today, we are continuing where we left off last day building towards completing the loop from biostructural data to our new analysis methods like PCA and clustering.

We begin with getting a single protein sequence for a protein family of interest.

> Q10. Which of the packages above is found only on BioConductor and not CRAN? 

The msa package is found only on BioCOnductor and not CRAN.

> Q11. Which of the above packages is not found on BioConductor or CRAN?

bio3d view is a package not found on BioConductor or CRAN.

> Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 

```{r}
library(bio3d)

aa <- get.seq("1ake_A")
aa
```

> Q13. How many amino acids are in this sequence, i.e. how long is this sequence? 

This sequence has 214 amino acids. 

Now we can use this sequence as a query to BLAST search the PDB to find similar sequences and structures.

```{r}
# Blast or hmmer search 
# b <- blast.pdb(aa)
```

I could save and load my blast results next time so I don't need to run the search every time.

```{r}
# saveRDS(b, file="blast_results.RDS")
```

```{r}
b <- readRDS("blast_results.RDS")
```

A summary plot of our BLAST results.

```{r}
# Plot a summary of search results
hits <- plot(b)
```

```{r}
hits$pdb.id
```

```{r}
# Download related PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Next, we are going to align and superpose all these structures.

```{r}
# Align related PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

## Some annotation of the PDBs

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
# plot(pdbs, labels=ids)
```

And collect annotation for each entry.

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

```{r}
head(anno)
```

# Principal Component Analysis

Time for PCA. We will use not the `prcomp()` function from base R but the `pca()` function frmo thr `bio3d` package as this one is designed to work nicely with biomolecular data.

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

We can now focus in on PC1 vs PC2.

```{r}
plot(pc.xray, 1:2)
```

Let's cluster our structures.

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)
```
And now to plot PC1 vs PC2 with color.

```{r}
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

To visualize the major structural variations in the ensemble the function `mktrj()` can be used to generate a trajectory PDB file by interpolating along a give PC (eigenvector):

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

We can now open this trajectory file in Molstar to view a wee movie of the major differences (i.e. displacement of atoms) in the structure set as we move along PC1.